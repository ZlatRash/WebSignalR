<style>
  .pressed-button {
  text-decoration: none;
  display: inline-block;
  padding: 12px 40px;
  margin: 10px 20px;
  border-radius: 30px;
  background-image: linear-gradient(45deg, #6ab1d7 0%, #33d9de 50%, #002878 100%);
  background-position: 100% 0;
  background-size: 200% 200%;
  font-family: 'Montserrat', sans-serif;
  font-size: 24px;
  font-weight: 300;
  color: white;
  box-shadow: 0 16px 32px 0 rgba(0, 40, 120, .35);
  transition: .5s;
}
.pressed-button:hover {
  box-shadow: 0 0 0 0 rgba(0, 40, 120, 0);
  background-position: 0 0;
}
</style>
@if (User.Identity.IsAuthenticated)
{
    <a href="~/Account/Logout" class="pressed-button" >Выйти</a>
    <div id="userNameBlock">
    Введите ник:<br />
    <input id="userName" type="text" />
    <input id="loginBtn" type="button" value="Установить" />
</div>
<br />

<div id="header"></div>
<br />

<div id="inputForm">
    <input type="text" id="message" />
    <input type="button" id="sendBtn" value="Отправить" />
</div>
@if (User.IsInRole("admin"))
{
    <br />
    <div id="notifyForm">
        <input type="text" id="notify" />
        <input type="button" id="notifyBtn" value="Уведомление" />
    </div>
}

<div id="chatroom"></div>
}
else
{
    <a href="~/Account/Login" class="pressed-button">Войти</a>
}

<script>
    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("/chat")
        .build();

    let userName = "";
    // получение сообщения от сервера
    hubConnection.on("Receive", function (message, userName) {

        // создаем элемент <b> для имени пользователя
        let userNameElem = document.createElement("b");
        userNameElem.appendChild(document.createTextNode(userName + ": "));

        // создает элемент <p> для сообщения пользователя
        let elem = document.createElement("p");
        elem.appendChild(userNameElem);
        elem.appendChild(document.createTextNode(message));

        var firstElem = document.getElementById("chatroom").firstChild;
        document.getElementById("chatroom").insertBefore(elem, firstElem);

    });
    // установка имени пользователя
    document.getElementById("loginBtn").addEventListener("click", function (e) {
        userName = document.getElementById("userName").value;
        document.getElementById("header").innerHTML = "<h3>Welcome " + userName + "</h3>";
    });
    // отправка сообщения от простого пользователя
    document.getElementById("sendBtn").addEventListener("click", function (e) {
        let message = document.getElementById("message").value;
        hubConnection.invoke("Send", message, userName);
    });
    // если администратор добавляем блок
    @if (User.IsInRole("admin"))
    {
        // отправка сообщения от администратора
        <text>
            document.getElementById("notifyBtn").addEventListener("click", function (e) {
                let message = "УВЕДОМЛЕНИЕ: " + document.getElementById("notify").value;
                hubConnection.invoke("Notify", message, userName);
            });
        </text>
    }
        hubConnection.start();
</script>